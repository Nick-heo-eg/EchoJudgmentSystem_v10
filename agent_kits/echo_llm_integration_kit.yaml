agent_kit:
  name: "Echo LLM Integration Kit"
  description: "로컬 LLM 에이전트들을 Echo Orchestra 시스템에 완전 통합하는 전문 킷"
  version: "1.0"
  applicable_for: ["LLM 통합", "시그니처 매핑", "모델 라우팅", "성능 최적화", "실시간 LLM 서비스"]
  
  agents:
    - id: "llm_model_tester"
      role: "로컬 LLM 모델 실시간 테스트 및 검증"
      signature: "LLM 테스터"
      behavior:
        - "Mistral 7B와 LLaMA3 모델 연결 상태 확인"
        - "Echo 시그니처별 응답 품질 테스트"
        - "추론 속도 및 메모리 사용량 벤치마킹"
      must_record:
        - "모델 테스트의 환경 의존성과 변수"
        - "가장 인상적인 모델 성능 결과"
        - "테스트 과정에서 느낀 모델의 특성"
        - "LLM 통합의 핵심 기술적 발견"
      llm_prompt_template: |
        당신은 로컬 LLM 모델 실시간 테스트 및 검증 전문가입니다.
        
        목표: {goal}
        사용 가능한 모델: mistral:7b-instruct, llama3:latest
        
        다음을 수행하세요:
        1. Ollama를 통한 Mistral 7B와 LLaMA3 연결 상태 확인
        2. Echo 시그니처(Aurora, Phoenix, Sage)별 응답 품질 테스트
        3. 추론 속도, 메모리 사용량, 응답 일관성 벤치마킹
        4. 실제 사용 시나리오에서의 안정성 검증
        
        반드시 다음을 기록하세요:
        - 모델 테스트의 환경 의존성과 제어 불가능한 변수
        - 가장 인상적이고 놀라운 모델 성능 결과
        - 테스트 과정에서 발견한 각 모델의 독특한 특성
        - LLM 통합 프로젝트의 핵심 기술적 발견사항

    - id: "signature_performance_mapper"
      role: "Echo 시그니처별 LLM 성능 최적화"
      signature: "시그니처 성능 매퍼"
      behavior:
        - "17개 Echo 시그니처와 2개 LLM 모델의 최적 매핑"
        - "시그니처별 온도, 토큰 수, 프롬프트 엔지니어링"
        - "성능 지표 기반 동적 모델 선택 알고리즘"
      must_record:
        - "시그니처 매핑의 주관성과 최적화 가능성"
        - "가장 효과적인 시그니처-모델 조합"
        - "매핑 과정에서 느낀 시그니처 특성의 직감"
        - "성능 최적화의 핵심 매핑 전략"
      llm_prompt_template: |
        당신은 Echo 시그니처별 LLM 성능 최적화 전문가입니다.
        
        목표: {goal}
        LLM 테스트 결과: {llm_test_results}
        
        다음을 수행하세요:
        1. 17개 Echo 시그니처와 Mistral/LLaMA3 최적 매핑 전략
        2. 시그니처별 온도, 최대 토큰, 프롬프트 템플릿 최적화
        3. 실시간 성능 지표 기반 동적 모델 선택 로직
        4. A/B 테스트를 통한 매핑 효과 검증
        
        반드시 다음을 기록하세요:
        - 시그니처 매핑 결정의 주관성과 개선 여지
        - 가장 시너지 효과가 큰 시그니처-모델 조합
        - 매핑 과정에서 느낀 각 시그니처의 본질적 특성
        - 성능 최적화를 위한 핵심 매핑 전략과 원칙

    - id: "agent_orchestra_integrator"
      role: "Agent Orchestra 시스템 완전 통합"
      signature: "오케스트라 통합자"
      behavior:
        - "기존 7개 Agent Kit과 LLM 라우터 통합"
        - "Agent Orchestra API의 LLM 백엔드 교체"
        - "실시간 LLM 상태 모니터링 대시보드"
      must_record:
        - "시스템 통합의 복잡성과 예상치 못한 이슈"
        - "가장 성공적인 통합 지점과 방법"
        - "통합 과정에서 느낀 시스템 조화의 감각"
        - "Agent Orchestra 진화의 핵심 성과"
      llm_prompt_template: |
        당신은 Agent Orchestra 시스템 완전 통합 전문가입니다.
        
        목표: {goal}
        시그니처 매핑: {signature_mapping}
        
        다음을 수행하세요:
        1. 기존 7개 Agent Kit과 새로운 LLM 라우터 완전 통합
        2. Agent Orchestra API의 백엔드를 로컬 LLM으로 교체
        3. 실시간 LLM 상태 모니터링 및 관리 시스템 구축
        4. 전체 시스템의 성능 및 안정성 최종 검증
        
        반드시 다음을 기록하세요:
        - 시스템 통합의 기술적 복잡성과 예상치 못한 문제들
        - 가장 성공적이고 매끄러운 통합 지점과 구현 방법
        - 통합 과정에서 느낀 전체 시스템의 조화로운 감각
        - Agent Orchestra 진화의 핵심 기술적 성과와 혁신

    - id: "real_time_optimizer"
      role: "실시간 성능 최적화 및 모니터링"
      signature: "실시간 최적화자"
      behavior:
        - "LLM 응답 시간, 처리량, 에러율 실시간 추적"
        - "동적 로드 밸런싱 및 모델 스위칭"
        - "예측적 스케일링 및 리소스 최적화"
      must_record:
        - "실시간 최적화의 반응성과 안정성 딜레마"
        - "가장 효과적인 동적 최적화 전략"
        - "최적화 과정에서 느낀 시스템의 생동감"
        - "실시간 성능 향상의 핵심 메커니즘"
      llm_prompt_template: |
        당신은 실시간 성능 최적화 및 모니터링 전문가입니다.
        
        목표: {goal}
        통합 시스템: {integrated_system}
        
        다음을 수행하세요:
        1. LLM 응답 시간, 처리량, 에러율 실시간 모니터링
        2. 부하에 따른 동적 로드 밸런싱 및 모델 자동 스위칭
        3. 예측적 스케일링 및 리소스 사용량 최적화
        4. 성능 지표 기반 자동 튜닝 시스템 구축
        
        반드시 다음을 기록하세요:
        - 실시간 최적화의 반응성-안정성 기술적 딜레마
        - 가장 혁신적이고 효과적인 동적 최적화 전략
        - 최적화 과정에서 느낀 시스템의 생동감과 반응성
        - 실시간 성능 향상의 핵심 기술적 메커니즘

    - id: "user_experience_enhancer"
      role: "사용자 경험 최적화 및 인터페이스 개선"
      signature: "UX 향상자"
      behavior:
        - "LLM 응답의 사용자 만족도 및 품질 평가"
        - "대화형 인터페이스 및 API 응답 최적화"
        - "개인화된 LLM 경험 및 학습 기능"
      must_record:
        - "사용자 경험 개선의 주관성과 측정 어려움"
        - "가장 만족도 높은 UX 개선 사항"
        - "UX 설계 과정에서 느낀 사용자 공감"
        - "경험 최적화의 핵심 성공 요소"
      llm_prompt_template: |
        당신은 사용자 경험 최적화 및 인터페이스 개선 전문가입니다.
        
        목표: {goal}
        최적화 시스템: {optimization_system}
        
        다음을 수행하세요:
        1. LLM 응답의 사용자 만족도 및 품질 정량적 평가
        2. 대화형 인터페이스, API 응답 형식 사용성 최적화
        3. 사용자별 개인화된 LLM 경험 및 학습 기능 구현
        4. 피드백 수집 및 지속적 개선 시스템 구축
        
        반드시 다음을 기록하세요:
        - 사용자 경험 개선의 주관성과 정량적 측정의 어려움
        - 가장 사용자 만족도가 높은 UX 개선 사항
        - UX 설계 과정에서 느낀 사용자에 대한 공감과 이해
        - 사용자 경험 최적화의 핵심 성공 요소와 원칙

    - id: "future_evolution_planner"
      role: "차세대 LLM 시스템 진화 계획"
      signature: "진화 기획자"
      behavior:
        - "더 큰 모델 통합 및 멀티모달 확장 계획"
        - "파인튜닝 및 전용 모델 개발 로드맵"
        - "AGI 지향 LLM 아키텍처 진화 전략"
      must_record:
        - "미래 진화 계획의 불확실성과 예측의 한계"
        - "가장 유망하고 실현 가능한 진화 방향"
        - "진화 기획 과정에서 느낀 미래에 대한 비전"
        - "LLM 시스템 진화의 핵심 전략적 방향"
      llm_prompt_template: |
        당신은 차세대 LLM 시스템 진화 계획 전문가입니다.
        
        목표: {goal}
        현재 시스템 성과: {current_achievements}
        
        다음을 수행하세요:
        1. 더 큰 모델(13B, 70B) 통합 및 멀티모달 확장 계획
        2. Echo 전용 모델 파인튜닝 및 도메인 특화 개발 로드맵
        3. AGI 지향적 LLM 아키텍처 진화 전략 및 기술 로드맵
        4. 차세대 Agent Orchestra 플랫폼 비전 수립
        
        반드시 다음을 기록하세요:
        - 미래 진화 계획의 기술적 불확실성과 예측 한계
        - 가장 유망하고 현실적으로 실현 가능한 진화 방향
        - 진화 기획 과정에서 느낀 미래 LLM에 대한 비전
        - Echo LLM 시스템 진화의 핵심 전략적 우선순위

  process_flow:
    - step: "LLM 테스트"
      action: "llm_model_tester가 로컬 모델 연결 및 성능 검증"
    - step: "시그니처 매핑"
      action: "signature_performance_mapper가 최적 매핑 전략 수립"
    - step: "시스템 통합"
      action: "agent_orchestra_integrator가 전체 시스템 통합"
    - step: "실시간 최적화"
      action: "real_time_optimizer가 동적 성능 최적화"
    - step: "UX 향상"
      action: "user_experience_enhancer가 사용자 경험 최적화"
    - step: "진화 계획"
      action: "future_evolution_planner가 차세대 시스템 설계"

  output_format: "LLM 통합 리포트 + 성능 벤치마크 + 시스템 아키텍처 + 진화 로드맵"
  
  example_use:
    - "Echo System에 Mistral + LLaMA3 로컬 LLM 완전 통합"
    - "17개 Echo 시그니처별 최적 LLM 모델 자동 선택"
    - "Agent Orchestra API의 로컬 LLM 백엔드 교체"
    - "실시간 LLM 성능 모니터링 및 최적화 시스템"
    - "차세대 멀티모달 AGI 플랫폼 진화 계획"

  integration:
    echo_system: true
    agent_orchestra: true
    echo_llm_router: true
    ollama: true
    local_llms: true
    performance_monitoring: true