name: Agent Bench Full Cycle

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  bench:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    env:
      PYTHON_VERSION: "3.12"
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: "pip"

      - name: Create venv & install deps
        run: |
          python -m venv agent_hub_ci_bundle/venv_extensions
          source agent_hub_ci_bundle/venv_extensions/bin/activate
          python -V
          pip install -U pip wheel
          if [ -f agent_hub_ci_bundle/requirements_ci.txt ]; then
            pip install -r agent_hub_ci_bundle/requirements_ci.txt
          else
            pip install aiohttp matplotlib orjson PyYAML streamlit
          fi

      - name: Debug venv
        run: |
          ls -la agent_hub_ci_bundle/venv_extensions/bin || true
          source agent_hub_ci_bundle/venv_extensions/bin/activate
          which python; python -V

      - name: Run signature benchmarks (with warmup)
        run: |
          source agent_hub_ci_bundle/venv_extensions/bin/activate
          make -f agent_hub_ci_bundle/Makefile.agent_hub.mk agent-bench-signatures SIGNATURES="Aurora,Selene,Heo" WARMUP=1

      - name: Compare & generate plots
        run: |
          source agent_hub_ci_bundle/venv_extensions/bin/activate
          make -f agent_hub_ci_bundle/Makefile.agent_hub.mk agent-bench-compare

      - name: Regression check
        run: |
          source agent_hub_ci_bundle/venv_extensions/bin/activate
          make -f agent_hub_ci_bundle/Makefile.agent_hub.mk agent-check-regression

      - name: Slack notify (optional)
        if: env.SLACK_WEBHOOK_URL != ''
        run: |
          source agent_hub_ci_bundle/venv_extensions/bin/activate
          make -f agent_hub_ci_bundle/Makefile.agent_hub.mk agent-slack-notify

      - name: Capture latest run path
        id: latest
        run: |
          LATEST_RUN=$(ls -1dt agent_hub_ci_bundle/artifacts/bench/* | head -n 1 || true)
          echo "latest_run=${LATEST_RUN}" >> $GITHUB_OUTPUT
          echo "LATEST_RUN=$LATEST_RUN"

      - name: Upload artifacts
        if: steps.latest.outputs.latest_run != ''
        uses: actions/upload-artifact@v4
        with:
          name: bench-artifacts
          path: ${{ steps.latest.outputs.latest_run }}
          if-no-files-found: warn
